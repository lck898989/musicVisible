{
  "ver": "1.0.23",
  "uuid": "6b5596e8-ba73-4715-b1bb-d60f5d6a8ca3",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\n\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\n\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n\n  v_color = a_color;\n\n  gl_Position = pos;\n}\n",
        "frag": "\nprecision highp float;\n\n#if USE_ALPHA_TEST\n  \n  uniform float alphaThreshold;\n#endif\n\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\n\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\n\nvarying vec4 v_color;\n\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D tex;\nuniform float time;\nfloat iSampleRate = 44100.;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ,vec2 res)\n{\n  vec2 uv = fragCoord.xy / res.xy;\n  uv.y = 1. - uv.y;\n  uv.x = 1. - uv.x;\n\n  float dx = 1./res.x;\n  float fmax = iSampleRate/4.;\n  float c=0.;\n  float cg = 0.;\n  float cb = 0.;\n  for(int once=0; once<1; once++) {\n\n      if (uv.y>.9) {\n\n          if ((uv.x<4.*dx)||(1.-uv.x<4.*dx))\n          { \n            fragColor = vec4(1.,.7,0.,0.6);\n            break;\n          }\n          if ((abs(uv.x-2./12.)<dx)||(abs(uv.x-3./12.)<dx)||(abs(uv.x-5./12.)<dx)||(abs(uv.x-7./12.)<dx)||(abs(uv.x-8./12.)<dx)||(abs(uv.x-10./12.)<dx)) {\n            fragColor = vec4(.4,.4,1.,0.6);\n            break;\n          }\n          if (mod(uv.x,1./12.)<dx) {\n            fragColor = vec4(0.,0.,.7,0.6);\n            break;\n          }\n\n          float f = 440.*pow(2.,uv.x);\n\n          for (float i=1.; i<=5.; i++) { \n            if (f>=440.) c = max(c,texture2D(tex,vec2(f/fmax,.5/2.)).r);\n              f *= 2.;\n          }\n          c = (c-.3)*1.5;\n          fragColor=vec4(1.5*c,c,.7*c,1);\n          break;\n      } else if (uv.y>.6) {\n\n        uv.y = (uv.y-.6)/.3;\n        uv.x /= 5.;\n        float f = uv.x*fmax;\n\n        if (abs(f-440.)< fmax/(5.*res.x)) { \n          fragColor = vec4(1.,.7,0.,0.6); \n          break;  \n        }\n        if (mod(log(f/440.)/log(2.),1.)< .5/(res.x*uv.x)) { \n          fragColor = vec4(.7,0.,0.,0.6); \n          break;  \n        }\n        if (mod(f,440.)< fmax/(5.*res.x)) { \n          fragColor = vec4(0.,.7,0.,0.6); \n          break;  \n        }\n\n        vec4 textureColor = texture2D(tex,vec2(uv.x,.5/2.));\n        cg = 0.1 * sin(textureColor.g * 0.5 + time) + 0.9;\n        cb = 0.1 * sin(textureColor.b * 0.3 + time) + 0.9;\n        c = textureColor.r;\n\n        if(uv.y < c) {\n          c = 1.;\n          if(uv.y < c / 2.) {\n            c = 0.5;\n          }\n        } else {\n          c = 0.;\n        }\n      } else if (uv.y>.3) {\n\n        uv.y = (uv.y-.3)/.3; \n        float f = uv.x*fmax;\n\n        if (abs(f-440.)< fmax/res.x) { \n          fragColor = vec4(1.,.7,0.,0.6); \n          break;  \n        }\n        if (mod(log(f/440.)/log(2.),1.)< 2./(res.x*uv.x)) { \n          fragColor = vec4(.7,0.,0.,0.6); \n          break;  \n        } \n        if (mod(f,440.)< fmax/res.x) { \n          fragColor = vec4(0.,.7,0.,0.6); \n          break; \n        }\n\n        vec4 textureColor = texture2D(tex,vec2(uv.x,.5/2.));\n        cg = 0.1 * sin(textureColor.g * 0.5 + time) + 0.9;\n        cb = 0.1 * sin(textureColor.b * 0.3 + time) + 0.9;\n        c = texture2D(tex,vec2(uv.x,.5/2.)).r;\n        if(uv.y < c) {\n          c = 1.;\n          if(uv.y < c / 2.) {\n            c = 0.5;\n          }\n        } else {\n          c = 0.;\n        }\n      }\n\n      else {\n\n        uv.y = (uv.y-0.)/.3;\n        #if 1\n\n          float m=999., xm;\n          for (float x=0.5; x< 100.; x+=1.) {\n              c =  texture2D(tex,vec2(x/512.,1.5/2.)).r;\n              if (c<m) {\n                m=c; \n                xm=x;\n              }\n          }\n          uv.x += xm/512.;\n        #endif\n        vec4 textureColor = texture2D(tex,vec2(uv.x,.5/2.));\n        cg = 0.1 * sin(textureColor.g * 0.5 + time) + 0.9;\n        cb = 0.1 * sin(textureColor.b * 0.3 + time) + 0.9;\n        c = texture2D(tex,vec2(uv.x,1.5/2.)).r;\n        if(uv.y < c) {\n          c = 1.;\n          if(uv.y < c / 2.) {\n            c = 0.5;\n          }\n        } else {\n          c = 0.;\n        }\n      }\n      fragColor = vec4(c,c,c,1.0);\n  }}\nvoid main () {\n  vec2 res = vec2(960.,320.);\n  mainImage(gl_FragColor,v_uv0.xy * res.xy,res);\n}\n"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  vec4 cc_time;\n\n  vec4 cc_screenSize;\n\n  vec4 cc_screenScale;\n\n  vec4 cc_nativeSize;\n\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n\n  vec4 cc_exposure;\n\n  vec4 cc_mainLitDir;\n\n  vec4 cc_mainLitColor;\n\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\n\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\n\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n\n  v_color = a_color;\n\n  gl_Position = pos;\n}\n",
        "frag": "\nprecision highp float;\n\n#if USE_ALPHA_TEST\n  \n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  }\n#endif\n\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\n\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\n\nin vec4 v_color;\n\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform ARGS {\n  vec2 iResolution;\n  sampler2D tex;\n  float time;\n}\nfloat iSampleRate = 44100.;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ,vec2 res)\n{\n  vec2 uv = fragCoord.xy / res.xy;\n  uv.y = 1. - uv.y;\n  uv.x = 1. - uv.x;\n\n  float dx = 1./res.x;\n  float fmax = iSampleRate/4.;\n  float c=0.;\n  float cg = 0.;\n  float cb = 0.;\n  for(int once=0; once<1; once++) {\n\n      if (uv.y>.9) {\n\n          if ((uv.x<4.*dx)||(1.-uv.x<4.*dx))\n          { \n            fragColor = vec4(1.,.7,0.,0.6);\n            break;\n          }\n          if ((abs(uv.x-2./12.)<dx)||(abs(uv.x-3./12.)<dx)||(abs(uv.x-5./12.)<dx)||(abs(uv.x-7./12.)<dx)||(abs(uv.x-8./12.)<dx)||(abs(uv.x-10./12.)<dx)) {\n            fragColor = vec4(.4,.4,1.,0.6);\n            break;\n          }\n          if (mod(uv.x,1./12.)<dx) {\n            fragColor = vec4(0.,0.,.7,0.6);\n            break;\n          }\n\n          float f = 440.*pow(2.,uv.x);\n\n          for (float i=1.; i<=5.; i++) { \n            if (f>=440.) c = max(c,texture(tex,vec2(f/fmax,.5/2.)).r);\n              f *= 2.;\n          }\n          c = (c-.3)*1.5;\n          fragColor=vec4(1.5*c,c,.7*c,1);\n          break;\n      } else if (uv.y>.6) {\n\n        uv.y = (uv.y-.6)/.3;\n        uv.x /= 5.;\n        float f = uv.x*fmax;\n\n        if (abs(f-440.)< fmax/(5.*res.x)) { \n          fragColor = vec4(1.,.7,0.,0.6); \n          break;  \n        }\n        if (mod(log(f/440.)/log(2.),1.)< .5/(res.x*uv.x)) { \n          fragColor = vec4(.7,0.,0.,0.6); \n          break;  \n        }\n        if (mod(f,440.)< fmax/(5.*res.x)) { \n          fragColor = vec4(0.,.7,0.,0.6); \n          break;  \n        }\n\n        vec4 textureColor = texture(tex,vec2(uv.x,.5/2.));\n        cg = 0.1 * sin(textureColor.g * 0.5 + time) + 0.9;\n        cb = 0.1 * sin(textureColor.b * 0.3 + time) + 0.9;\n        c = textureColor.r;\n\n        if(uv.y < c) {\n          c = 1.;\n          if(uv.y < c / 2.) {\n            c = 0.5;\n          }\n        } else {\n          c = 0.;\n        }\n      } else if (uv.y>.3) {\n\n        uv.y = (uv.y-.3)/.3; \n        float f = uv.x*fmax;\n\n        if (abs(f-440.)< fmax/res.x) { \n          fragColor = vec4(1.,.7,0.,0.6); \n          break;  \n        }\n        if (mod(log(f/440.)/log(2.),1.)< 2./(res.x*uv.x)) { \n          fragColor = vec4(.7,0.,0.,0.6); \n          break;  \n        } \n        if (mod(f,440.)< fmax/res.x) { \n          fragColor = vec4(0.,.7,0.,0.6); \n          break; \n        }\n\n        vec4 textureColor = texture(tex,vec2(uv.x,.5/2.));\n        cg = 0.1 * sin(textureColor.g * 0.5 + time) + 0.9;\n        cb = 0.1 * sin(textureColor.b * 0.3 + time) + 0.9;\n        c = texture(tex,vec2(uv.x,.5/2.)).r;\n        if(uv.y < c) {\n          c = 1.;\n          if(uv.y < c / 2.) {\n            c = 0.5;\n          }\n        } else {\n          c = 0.;\n        }\n      }\n\n      else {\n\n        uv.y = (uv.y-0.)/.3;\n        #if 1\n\n          float m=999., xm;\n          for (float x=0.5; x< 100.; x+=1.) {\n              c =  texture(tex,vec2(x/512.,1.5/2.)).r;\n              if (c<m) {\n                m=c; \n                xm=x;\n              }\n          }\n          uv.x += xm/512.;\n        #endif\n        vec4 textureColor = texture(tex,vec2(uv.x,.5/2.));\n        cg = 0.1 * sin(textureColor.g * 0.5 + time) + 0.9;\n        cb = 0.1 * sin(textureColor.b * 0.3 + time) + 0.9;\n        c = texture(tex,vec2(uv.x,1.5/2.)).r;\n        if(uv.y < c) {\n          c = 1.;\n          if(uv.y < c / 2.) {\n            c = 0.5;\n          }\n        } else {\n          c = 0.;\n        }\n      }\n      fragColor = vec4(c,c,c,1.0);\n  }}\nvoid main () {\n  vec2 res = vec2(960.,320.);\n  mainImage(gl_FragColor,v_uv0.xy * res.xy,res);\n}\n"
      }
    }
  ],
  "subMetas": {}
}