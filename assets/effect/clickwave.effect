// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>

  in vec4 v_color;

  in vec2 v_uv0;
  uniform sampler2D texture;
  uniform sampler2D uvoffsetTex;

  uniform ARGS {
    vec2 iResolution;
    vec2 wave;
    float time;

  }

  void main () {
    vec2 uv = v_uv0;
    // vec2 va = vec2(0.5,0.5);
    float offset = distance(uv,wave);
    float factor = 0.03;
    // 衰减系数
    if(offset < 0.8) {
      factor *= 1. - abs(offset) / 0.5; 
      uv.x += factor * sin(offset * 10. * uv.x + time);
      uv.y += factor * sin(offset * 10. * uv.y + time);
    }
    gl_FragColor = texture2D(texture,uv);
  }
}%
